---
title: "Relatório de dados de Sífilis (dados não agregados)"
author: "Mikael Marin Coletto"
sidebar: false
toc: true
execute:
  warning: false
cache: FALSE
lang: pt
theme: cerulean
reference-location: margin
code-fold: true
code-summary: "Mostrar o código"
code-link: true
format: 
  html:
    page-layout: full
    output-file: "relatorio_n_agreg_html_test"
    embed-resources: true
    anchor-sections: true
    smooth-scroll: true
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
    output-file: "relatorio_n_agreg_pdf_test"
editor: visual
params:
  run_all_code: "T"
  overwrite_tables: "T"
  use_db: "T"
  debug: "F"
  teste_interno: "F"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(gt)
```

# Sífilis gestacional

## Introdução

Este relatório tem como objetivo descrever o banco de dados de dados longitudinal sobre a Sífilis Gestacional e Congênita no Brasil no período de 2007 a 2023, obtidos do Sistema de Informação de Agravos de Notificação (SINAN). Os dados explorados não foram agregados, apenas foram unidas em uma grande base. As variáveis de origem de outras fontes e sistemas de informações como Sistema de Informações de Nascidos Vivos (SINASC), Cadastro Nacional de Estabelecimentos de Saúde (CNES), Sistema de Informações Hospitalares (SIH), Sistema de Informação de Mortalidade (SIM), Programa Bolsa Família, Cobertura de Estratégia de Saúde da Família e Atenção Primária, indicadores socioeconômicos, entre outros.

## Dados

Os dados foram obtidos do banco de dados do SINAN e estão disponíveis no arquivo `df_sifilis_mun_ano_fx_et_racacor_esc.RDS`. O arquivo contém as seguintes variáveis:

-   Município de residência
-   Ano do diagnóstico
-   Mês do diagnóstico
-   Faixa etária
-   Raça/cor
-   Escolaridade
-   Número de casos de Sífilis

```{r lendo-dados}
df_sifilis <- readRDS("data-raw/df_sifilis_all_n_agreg.RDS") |>
  janitor::clean_names() |> 
  dplyr::rename(ano = ano_diag, raca = cs_raca, esc = escolaridade,
                mes = mes_diag)

head(df_sifilis) |> 
  gt::gt()

### Alterando variáveis numéricas para seu tipo correto
vars_num <- c("ano")
df_sifilis <- df_sifilis |> 
  dplyr::mutate(across(all_of(vars_num), as.numeric))

```

## Análise Exploratória

### Completude de variáveis (Geral)

```{r analise-completude}
variaveis <- colnames(df_sifilis)

## Definindo como NA as variáveis que possuem valores inválidos
df_sifilis_test <- df_sifilis %>%
  dplyr::mutate(across(where(is.character), ~ ifelse(.x %in% c("****", "Em branco/Inválido"), NA, .x)))

df_completude <- data.frame(variavel = character(), completude = numeric())
for(i in variaveis){
  completude = round(100*(sum(!is.na(df_sifilis_test[[i]]))/nrow(df_sifilis_test)), 5)
  df_completude <- rbind(df_completude, data.frame(variavel = i, completude = completude))
}

df_completude |> 
  gt::gt() |> 
  gt::cols_label(variavel = "Variável", completude = "Completude")

```

### Completude de variáveis (por ano)

```{r analise-completude-ano}

vars <- c("fx_etaria", "raca", "esc")

## Período
years <- 2007:2023

## Criando dataframe 
df_var <- data.frame(var = character())

## Adicionando colunas de anos
for (year in years) {
  df_var[, paste0(year)] <- rep(NA, nrow(df_var))  # Add a column named "Yyyy" with NA values
}

for(var in vars){
  # var <- "raca"
  df_sifilis_ano_var <- df_sifilis_test |>
    dplyr::select(ano, !!as.name(var)) |> 
    dplyr::filter(!is.na(ano)) |>
    dplyr::group_by(ano, !!as.name(var)) |> 
    dplyr::mutate(n = n()) |> 
    dplyr::arrange(ano, !!as.name(var)) |> 
    dplyr::distinct(ano, !!as.name(var), .keep_all = TRUE)
  
  df_sifilis_ano_var <- df_sifilis_ano_var |> 
    dplyr::mutate(categs_var = ifelse(is.na(!!as.name(var)), "inv", "val")) |>
    dplyr::group_by(ano, categs_var) |>
    dplyr::summarise(n = sum(n)) |>
    dplyr::ungroup() |> 
    tidyr::pivot_wider(names_from = categs_var, values_from = n, values_fill = 0)
  
  if(!("inv" %in% colnames(df_sifilis_ano_var))){
    df_sifilis_ano_var <- df_sifilis_ano_var |> 
      dplyr::mutate(inv = 0)
  }
  
  df_sifilis_ano_var <- df_sifilis_ano_var |>
    dplyr::mutate(perc = paste0(round(val/(val + inv)*100, 2), "%")) |> 
    dplyr::select(ano, perc)
  
  
  df_var_aux <- t(df_sifilis_ano_var) |> 
    tibble::as_tibble(.name_repair = "minimal") |> 
    janitor::row_to_names(row_number = 1) |> 
    dplyr::mutate(var = var) |> 
    dplyr::select(var, everything())
  
  df_var <- rbind(df_var, df_var_aux)
}

df_var |> 
  gt::gt() |> 
  gt::cols_label(var = "Variável")

```

### Variáveis numéricas

```{r analise-numericas}
df_sifilis_numeric_vars <- df_sifilis_test |> 
  dplyr::select(where(is.numeric))

df_numeric <- data.frame(variavel = character(), 
                         min = numeric(), median = numeric(), media = numeric() , max = numeric(),
                         total = numeric())

variaveis <- colnames(df_sifilis_numeric_vars)
for(i in variaveis){
  min = min(df_sifilis_numeric_vars[[i]], na.rm = TRUE)
  median = median(df_sifilis_numeric_vars[[i]], na.rm = TRUE)
  media = round(mean(df_sifilis_numeric_vars[[i]], na.rm = TRUE), 2)
  max = max(df_sifilis_numeric_vars[[i]], na.rm = TRUE)
  sum = sum(df_sifilis_numeric_vars[[i]], na.rm = TRUE)
  df_numeric <- rbind(df_numeric, data.frame(variavel = i, 
                                             min = min, median = median, media = media, 
                                             max = max, total = sum))
}

df_numeric |> 
  gt::gt() |> 
  gt::cols_label(variavel = "Variável", min = "Mínimo", median = "Mediana", media = "Média", max = "Máximo", total = "Total")

```

### Variáveis categóricas

### Tabela geral

```{r analise-categoricas}
df_sifilis_categoric_vars <- df_sifilis |> 
  dplyr::select(where(is.character))

variaveis <- colnames(df_sifilis_categoric_vars)

df_categoric <- data.frame(variavel = character(), 
                           n_distinct = numeric(), 
                           levels = character())

for(i in variaveis){
  n_distinct = n_distinct(df_sifilis_categoric_vars[[i]], na.rm = TRUE)
  levels = paste(sort(unique(df_sifilis_categoric_vars[[i]])), collapse = ", ")
  if(length(unique(df_sifilis_categoric_vars[[i]])) > 20){
    levels = "Muitos valores distintos (> 20)"
  }
  df_categoric <- rbind(df_categoric, data.frame(variavel = i, 
                                                 n_distinct = n_distinct, levels = levels))
  # print(df_categoric)
}

df_categoric |> 
  gt::gt() |> 
  gt::cols_label(variavel = "Variável", n_distinct = "Nº de valores distintos", levels = "Valores distintos")

```

#### Gráficos

```{r graficos-categoricas}
df_categoric_av <- df_categoric |>
  dplyr::filter(n_distinct <= 20)

library(ggtext)
vars_av <- df_categoric_av$variavel
grafs_categ <- list()

i <- 1
for(var in vars_av){  
  # var <- "raca"
  
  grafs_categ[[i]] <- df_sifilis_categoric_vars |>
    dplyr::group_by(!!as.name(var)) |>
    dplyr::summarise(casos_sifg = n()) |>
    dplyr::select(!!as.name(var), casos_sifg) |>
    ggplot2::ggplot() +
    ggplot2::geom_col(aes(x = !!as.name(var), y = casos_sifg), fill = "#ABA2D1") +
    ggplot2::labs(
      title = paste("Distribuição da variável ", var, ""),
      x = var,
      y = "Número de casos") +
    ggplot2::theme_minimal() +
    ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1)) +
    ggplot2::scale_y_continuous(labels = scales::number)
  
  i=i+1
  
  df_sifilis_categoric_vars |>
    dplyr::group_by(!!as.name(var)) |>
    dplyr::summarise(casos_sifg = n())
}

# grafs_categ[[1]]
grafs_categ

```

#### Distribuição de número de casos de Sífilis

##### Ano de diagnóstico

```{r distribuicao-ano}

df_sifilis_ano <- df_sifilis |>
  dplyr::group_by(ano) |>
  dplyr::summarise(casos_sifg = n()) |>
  dplyr::ungroup()

df_sifilis_ano |>
  ggplot2::ggplot() +
  ggplot2::geom_col(aes(x = ano, y = casos_sifg), fill = "#ABA2D1") +
  ggplot2::labs(title = "Distribuição de casos de Sífilis por ano",
       x = "Ano",
       y = "Número de casos") +
  ggplot2::theme_minimal() +
  ggplot2::scale_y_continuous(labels = scales::number)

```

##### Ano/mês de diagnóstico

```{r distribuicao-ano-mes}

df_sifilis_ano_mes <- df_sifilis |>
  dplyr::filter(ano != "****") |> 
  dplyr::group_by(ano, mes) |>
  dplyr::summarise(casos_sifg = n()) |>
  dplyr::ungroup() |> 
  dplyr::mutate(mes_ano = paste0(ano, "-", mes, "-", "01")) |> 
  dplyr::mutate(data = as.Date(mes_ano, format = "%Y-%m-%d"))

df_sifilis_ano_mes |>
  ggplot2::ggplot(aes(x = data, y = casos_sifg)) +
  geom_line(fill = "#ABA2D1") +  # Add fill color for better visualization (optional)
  labs(title = "Casos de Sífilis por Mês e Ano",  # Adjust title as needed
       x = "Mês e Ano",
       y = "Número de Casos") +
  theme_minimal() +
  scale_x_date(date_breaks = "year", date_labels = "%Y")  # Adjust x-axis formatting (optional)
```

##### Nos estados

```{r distribuicao-estados}
df_sifilis_uf <- df_sifilis |>
  dplyr::group_by(uf_resi) |>
  dplyr::summarise(casos_sifg = n()) |>
  dplyr::ungroup()

df_ufs <- data.table::fread("data-raw/ibge-ufs-pop-2022-est.csv") |>
  dplyr::mutate(uf_cod = as.character(uf_cod)) |> 
  dplyr::select(uf_cod, uf_nome)

df_sifilis_uf <- dplyr::left_join(df_sifilis_uf, df_ufs, by = c("uf_resi" = "uf_cod"))

uf_sf <- sf::read_sf(here::here("data-raw/dados-espaciais/uf_sf.shp")) |>
  dplyr::select(cod_stt, geometry)  |>
  dplyr::mutate(cod_stt = as.character(cod_stt))

df_sifilis_uf_sf <- df_sifilis_uf |> 
  dplyr::left_join(uf_sf, by = c("uf_resi" = "cod_stt")) |> 
  sf::st_as_sf()

df_sifilis_uf_sf <- sf::st_transform(df_sifilis_uf_sf, crs = '+proj=longlat +datum=WGS84')
```

###### Gráfico

```{r distribuicao-estados-grafico}
df_sifilis_uf_sf |>
  ggplot2::ggplot() +
  ggplot2::geom_sf(aes(fill = casos_sifg)) +
  ggplot2::labs(title = "Número de casos de Sífilis por UF") +
  ggplot2::theme_void() +
  ggplot2::theme(legend.position = "bottom") +
  ggplot2::scale_fill_gradient2(low = "#F2D4F3", high = "#791A78") +
  ggplot2::guides(fill = ggplot2::guide_legend(theme = ggplot2::theme(
    legend.title = ggplot2::element_text(size = 15, face = "bold", colour = "black")
  )))
```

###### Tabela

```{r distribuicao-ano-tabela}

df_sifilis_uf |> 
  dplyr::select(uf_nome, casos_sifg) |>
  gt::gt() |> 
  gt::cols_label(uf_nome = "UF", casos_sifg = "Nº de casos")

```

```{r distribuicao-categoricas}
df_categoric_av <- df_categoric |>
  dplyr::filter(n_distinct <= 20)

vars_av <- df_categoric_av$variavel
i <- vars_av[1]

## Removendo NAs para contagens de categorias
df_sifilis_categoric_vars <- df_sifilis_test |>
  dplyr::mutate(across(where(is.character), ~ ifelse(is.na(.x), "NA", .x))) |> 
  dplyr::mutate(ano = ifelse(ano == "****", "NA", ano))

df_vars_categ <- data.frame(variavel = character(), categorias = character())
for(i in vars_av){
  categ <- unique(df_sifilis_categoric_vars[[i]])
  cat("\n")
  table <- df_sifilis_categoric_vars[[i]] |> 
    dplyr::as_tibble() |>
    dplyr::group_by(value) |>
    dplyr::summarise(n = n()) |>
    dplyr::ungroup() |> 
    dplyr::rename(categoria = value)
  
  total <- sum(table$n)
  
  table <- table |> 
    dplyr::mutate(perc = round(n/total*100, 0)) |> 
    dplyr::mutate(row = paste0("**", categoria, ":** ", "</b>", n, " (", perc, "%)")) |> 
    dplyr::select(row)
  
  row <- paste0(table$row, collapse = "; \n")
  # table |> gt::gt()
    # gt::cols_label(categoria = "Categoria", n = "Nº de casos")
  
  df_vars_categ <- rbind(df_vars_categ, data.frame(variavel = i, categorias = row))
  
  # table_print <- gt::gt(table, rowname_col = "row", groupname_col = "group")
  # print(table_print)
  # cat("\n")
}

df_vars_categ |> 
  gt::gt() |>
  gt::cols_label(variavel = "Variável", categorias = "Categorias: N na categoria (% na categoria)") |> 
  gt::fmt_markdown(columns = everything(), rows = everything(), md_engine = "markdown")

```


## Análise bivariada

### Categóricas (agregadas por município)

#### Variáveis e suas categorias por ano

```{r n-casos-categorias-ano}

df_categoric_av <- df_categoric |>
  dplyr::filter(n_distinct <= 20)

vars <- df_categoric_av$variavel

vars <- vars[-c(2)]
grafs_biv <- list()
i <- 1
for(var in vars){
  # var <- "fx_etaria"
  df_sifilis_biv_ano <- df_sifilis |>
    dplyr::group_by(ano, !!as.name(var)) |>
    dplyr::summarise(casos_sifg = n()) |>
    dplyr::ungroup()
  
  grafs_biv[[i]] <- df_sifilis_biv_ano |> 
    ggplot2::ggplot() +
    ggplot2::geom_col(aes(x = ano, y = casos_sifg, fill = !!as.name(var))) +
    ggplot2::labs(title = paste("Distribuição de casos de Sífilis por ano e", var),
         x = paste0("Categorias de ", var),
         y = "Número de casos") +
    ggplot2::theme_minimal() +
    ggplot2::scale_y_continuous(labels = scales::number) + 
    ggplot2::scale_x_discrete(breaks = seq(2006, 2024, 2))
  
  i <- i+1
}

grafs_biv
df_sifilis_biv_ano |> 
  ggplot2::ggplot() +
  ggplot2::geom_col(aes(x = ano, y = casos_sifg, fill = !!as.name(var))) +
  ggplot2::labs(title = paste("Distribuição de casos de Sífilis por ano e", var),
       x = paste0("Categorias de ", var),
       y = "Número de casos") +
  ggplot2::theme_minimal() +
  ggplot2::scale_y_continuous(labels = scales::number) + 
  ggplot2::scale_x_discrete(breaks = seq(2006, 2024, 2))

## Como adicionar uma escala ao eixo y, usando anos de dois em dois no ggplot2 


```
